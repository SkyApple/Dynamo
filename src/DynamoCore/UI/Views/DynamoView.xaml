<Window x:Class="Dynamo.Controls.DynamoView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:views="clr-namespace:Dynamo.Views"
        xmlns:utilities="clr-namespace:Dynamo.Utilities"
        xmlns:sys="clr-namespace:System;assembly=mscorlib" 
        xmlns:models="clr-namespace:Dynamo.Models"
        xmlns:controls="clr-namespace:Dynamo.Controls" xmlns:commands="clr-namespace:Dynamo.UI.Commands"        
        xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
        xmlns:core="clr-namespace:Dynamo.Core"
        x:Name="_this"
        Height="768" 
        Width="1024"
        Closing="WindowClosing" 
        Closed="WindowClosed"
        MinHeight="600" 
        MinWidth="800" 
        Title="Dynamo"
        AllowsTransparency="False" 
        KeyDown="DynamoView_KeyDown"
        KeyUp="DynamoView_KeyUp"
        Background="#FF353535"
        FontFamily="Open Sans"
        SnapsToDevicePixels="True"
        ResizeMode="CanResizeWithGrip">

    <Window.CommandBindings>
        
    </Window.CommandBindings>
    
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/DynamoCore;component/UI/Themes/DynamoModern.xaml" />
                <ResourceDictionary Source="/DynamoCore;component/UI/Themes/DynamoConverters.xaml"/>
                <ResourceDictionary Source="/DynamoCore;component/UI/Themes/DynamoColorsAndBrushes.xaml" />                                
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Window.InputBindings>
        
        <KeyBinding Key="Tab"
                                Command="{Binding Path=DataContext.SelectNeighborsCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"/>

        <KeyBinding Key="Delete"
                                Command="{Binding Path=DataContext.DeleteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"/>
        <KeyBinding Key="N"
                                Modifiers="Control"
                                Command="{Binding Path=DataContext.NewHomeWorkspaceCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"/>
        <KeyBinding Key="N"
                                Modifiers="Control+Shift"
                                Command="{Binding Path=DataContext.ShowNewFunctionDialogCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"/>
        <KeyBinding Key="Tab"
                                Command="{Binding Path=DataContext.SelectNeighborsCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"/>

        <KeyBinding Key="Delete"
                                Command="{Binding Path=DataContext.DeleteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"/>
        <KeyBinding Key="C"
                                Modifiers="Control"
                                Command="{Binding Path=DataContext.CopyCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"/>
        <KeyBinding Key="A"
                                Modifiers="Control"
                                Command="{Binding Path=DataContext.SelectAllCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"/>

        <KeyBinding Key="D"
                                Modifiers="Control"
                                Command="{Binding Path=DataContext.CurrentSpaceViewModel.NodeFromSelectionCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"/>
        <KeyBinding Key="V"
                                Modifiers="Control"
                                Command="{Binding Path=DataContext.PasteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"/>

        <KeyBinding Key="G"
                                Modifiers="Control"
                                Command="{Binding Path=DataContext.ToggleCanNavigateBackgroundCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"/>
        
        <KeyBinding Key="W"
                                Modifiers="Control"
                                Command="{Binding Path=DataContext.AddNoteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"/>
        <KeyBinding Key="V"
                                Modifiers="Control"
                                Command="{Binding Path=DataContext.PasteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"/>
        <KeyBinding Key="S"
                                Modifiers="Control"
                                Command="{Binding Path=DataContext.ShowSaveDialogIfNeededAndSaveResultCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"/>
        <KeyBinding Key="S"
                                Modifiers="Control+Shift"
                                Command="{Binding Path=DataContext.ShowSaveDialogAndSaveResultCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"/>
        <KeyBinding Key="O"
                                Modifiers="Control"
                                Command="{Binding Path=DataContext.ShowOpenDialogAndOpenResultCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"/>
        <KeyBinding Key="H"
                                Modifiers="Control"
                                Command="{Binding Path=DataContext.HomeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"/>
        <KeyBinding Key="Up"
                                Modifiers="Control+Shift"
                                Command="{Binding Path=DataContext.ToggleConsoleShowingCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"/>
        <KeyBinding Key="F4"
                Modifiers="Alt"
                                Command="{Binding Path=DataContext.ExitCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"/>
        <KeyBinding Key="C"
                                Modifiers="Control+Shift"
                                Command="{Binding Path=DataContext.ClearCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"/>

        <KeyBinding Key="L"
                Modifiers="Control+Shift"
                    Command="{Binding Path=DataContext.LayoutAllCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"/>
        
        <KeyBinding Key="Left"
                    Modifiers="Ctrl+Alt"
                    CommandParameter="Left"
                    Command="{Binding Path=DataContext.PanCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"/>
        <KeyBinding Key="Right"
                    Modifiers="Ctrl+Alt"
                    CommandParameter="Right"
                    Command="{Binding Path=DataContext.PanCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"/>
        <KeyBinding Key="Up"
                    Modifiers="Ctrl+Alt"
                    CommandParameter="Up"
                    Command="{Binding Path=DataContext.PanCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"/>
        <KeyBinding Key="Down"
                    Modifiers="Ctrl+Alt"
                    CommandParameter="Down"
                    Command="{Binding Path=DataContext.PanCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"/>
        <KeyBinding Key="OemPlus"
                    Modifiers="Ctrl"
                    Command="{Binding Path=DataContext.ZoomInCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"/>
        <KeyBinding Key="OemMinus"
                    Modifiers="Ctrl"
                    Command="{Binding Path=DataContext.ZoomOutCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"/>
        <KeyBinding Key="D0"
                    Modifiers="Ctrl"
                    Command="{Binding Path=DataContext.FitViewCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"/>
        <KeyBinding Key="Escape"
                    Command="{Binding Path=DataContext.EscapeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"/>

    </Window.InputBindings>

    <Grid Name="mainGrid" FocusManager.IsFocusScope="True" PreviewMouseDown="Window_PreviewMouseDown" PreviewMouseUp="Window_PreviewMouseUp">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Name="consoleRow" Height="{Binding ConsoleShowing, Converter={StaticResource BoolToConsoleHeightConverter}}"/>
            <RowDefinition Height="48"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" MaxWidth="500"/>
            <!--MinWidth fix for GridSplitter dragging in frameless window-->
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!--Titlebar-->
        <Border BorderBrush="#FF3F4040"
                BorderThickness="0,0,0,1"
                Grid.Row="0"
                Grid.Column="0"
                Grid.ColumnSpan="3"
                Height="26"
                Name="titleBar">

            <Grid Name="titleBarGrid">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!--Menu-->
                <Menu IsMainMenu="True" Name="menu1">
                    <Menu.Resources>
                        <ResourceDictionary Source="/DynamoCore;component/UI/Themes/MenuStyleDictionary.xaml" />
                    </Menu.Resources>

                    <MenuItem Header="_File" Name="fileMenu" Focusable="False">
                        <MenuItem Header="_New" Name="newMenu" Focusable="False">
                            <MenuItem Header="_Home Workspace..." Command="{Binding NewHomeWorkspaceCommand}"  Name="newHomeWorkspace" InputGestureText="Ctrl + N" Focusable="False">
                            </MenuItem>
                            <MenuItem Header="_Custom Node..." Command="{Binding ShowNewFunctionDialogCommand}"  Name="newFuncButton" InputGestureText="Ctrl + Shift + N" Focusable="False">
                            </MenuItem>
                        </MenuItem>
                        <MenuItem Header="_Open..." Command="{Binding ShowOpenDialogAndOpenResultCommand}" Name="openButton" InputGestureText="Ctrl + O" Focusable="False">
                            <MenuItem.Icon>
                                <Image Source="/DynamoCore;component/UI/Images/openHS.png" Width="14" Height="14" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="_Save" Command="{Binding ShowSaveDialogIfNeededAndSaveResultCommand}" Name="saveThisButton" InputGestureText="Ctrl + S" Focusable="False">
                            <MenuItem.Icon>
                                <Image Source="/DynamoCore;component/UI/Images/saveHS.png" Width="14" Height="14" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Focusable="False" Header="_Save As..." Command="{Binding ShowSaveDialogAndSaveResultCommand}" Name="saveButton" InputGestureText="Ctrl + Shift + S" IsEnabled="{Binding IsUILocked, Converter={StaticResource InverseBooleanConverter}}">
                            <MenuItem.Icon>
                                <Image Source="/DynamoCore;component/UI/Images/saveHS.png" Width="14" Height="14" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Focusable="False" Header="_Export Workspace As Image..." Command="{Binding ShowSaveImageDialogAndSaveResultCommand}" Name="saveImage"/>
                        <Separator />
                        <MenuItem Focusable="False" Header="_Clear" Command="{Binding ClearCommand}" Name="clearButton" InputGestureText="Ctrl + Shift + C" IsEnabled="{Binding IsUILocked, Converter={StaticResource InverseBooleanConverter}}">
                            <MenuItem.Icon>
                                <Image Source="/DynamoCore;component/UI/Images/DocumentHS.png" Width="14" Height="14" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="_Exit" Command="{Binding ExitCommand}"  Name="exit" InputGestureText="Alt + F4" Focusable="False"/>
                    </MenuItem>

                    <MenuItem Header="_Edit" Name="editMenu" Focusable="False">
                        <MenuItem Focusable="False" Header="_Copy" Command="{Binding CopyCommand}" Name="copy" InputGestureText="Ctrl + C"/>
                        <MenuItem Focusable="False" Header="_Paste" Command="{Binding PasteCommand}"  Name="paste" InputGestureText="Ctrl + V"/>
                        <Separator/>
                        <MenuItem Focusable="False" Header="_Create Note" Command="{Binding AddNoteCommand}"  Name="noteMenuItem" InputGestureText="Ctrl + W" />
                        <MenuItem Focusable="False" Header="_Create Node From Selection" Command="{Binding Path=CurrentSpaceViewModel.NodeFromSelectionCommand}"  Name="nodeFromSelection" InputGestureText="Ctrl + D"/>
                        <MenuItem Focusable="False" Header="_Select All" Command="{Binding SelectAllCommand}"  Name="selectAll" InputGestureText="Ctrl + A"/>
                        <MenuItem Focusable="False" Header="_Delete Selected" Command="{Binding DeleteCommand}"  Name="deleteSelected" InputGestureText="Delete"/>
                        <!--<MenuItem Focusable="False" Header="_Select Neighbors" Command="{Binding Path=ExpandSelectionCommand}"  Name="expandSelect" InputGestureText="Tab"/>-->
                        <MenuItem  Header="_Align Selection"  Name="Align">
                            <MenuItem  Header="_X Average"  Command="{Binding AlignSelectedCommand}" CommandParameter="HorizontalCenter" Focusable="False"/>
                            <MenuItem  Header="_Left" Command="{Binding AlignSelectedCommand}" CommandParameter="HorizontalLeft" Focusable="False"/>
                            <MenuItem  Header="_Right" Command="{Binding AlignSelectedCommand}" CommandParameter="HorizontalRight" Focusable="False"/>
                            <MenuItem  Header="_Y Average" Command="{Binding AlignSelectedCommand}" CommandParameter="VerticalCenter" Focusable="False"/>
                            <MenuItem  Header="_Top" Command="{Binding AlignSelectedCommand}" CommandParameter="VerticalTop" Focusable="False"/>
                            <MenuItem  Header="_Bottom" Command="{Binding AlignSelectedCommand}" CommandParameter="VerticalBottom" Focusable="False"/>
                            <MenuItem  Header="_Y Distribute" Command="{Binding AlignSelectedCommand}" CommandParameter="VerticalDistribute" Focusable="False"/>
                            <MenuItem  Header="_X Distribute" Command="{Binding AlignSelectedCommand}" CommandParameter="HorizontalDistribute" Focusable="False"/>
                        </MenuItem>
                    </MenuItem>

                    <MenuItem Header="_View" Name="viewMenu" Focusable="False">
                        <MenuItem Header="_Zoom" Name="zoomMenu">
                            <MenuItem  Header="Zoom In (Mouse wheel down)"  Command="{Binding ZoomInCommand}" InputGestureText="Ctrl + ="/>
                            <MenuItem  Header="Zoom Out (Mouse wheel up)" Command="{Binding ZoomOutCommand}" InputGestureText="Ctrl + -"/>
                        </MenuItem>

                        <MenuItem Header="_Pan" Name="panMenu">
                            <MenuItem  Header="Pan Left (Mouse wheel drag left)"  Command="{Binding PanCommand}" CommandParameter="Left" InputGestureText="Ctrl + Shift + Left"/>
                            <MenuItem  Header="Pan Right (Mouse wheel drag right)" Command="{Binding PanCommand}"     CommandParameter="Right" InputGestureText="Ctrl + Shift + Right"/>
                            <MenuItem  Header="Pan Up (Mouse wheel drag up)"  Command="{Binding PanCommand}" CommandParameter="Up" InputGestureText="Ctrl + Shift + Up"/>
                            <MenuItem  Header="Pan Down (Mouse wheel drag down)" Command="{Binding PanCommand}" CommandParameter="Down" InputGestureText="Ctrl + Shift + Down"/>
                        </MenuItem>    

                        <MenuItem Header="{Binding Path=ConsoleShowing, Converter={StaticResource ShowHideConsoleMenuConverter}}"
                              Command="{Binding ToggleConsoleShowingCommand}" InputGestureText="Ctrl+Shift+Up"/>

                        <MenuItem Header="_Connectors" Name="connectorMenu">
                            <MenuItem Focusable="False" Header="_Connector Type" IsEnabled="True">
                                <MenuItem Focusable="False" Name="settings_curves" IsCheckable="True" IsChecked="{Binding Path=ConnectorType,Converter={StaticResource EnumToBoolConverter},ConverterParameter=BEZIER, Mode=TwoWay}" Command="{Binding SetConnectorTypeCommand}" CommandParameter="BEZIER" Header="Curves"/>
                                <MenuItem Name="settings_plines" IsCheckable="True" IsChecked="{Binding Path=ConnectorType,Converter={StaticResource EnumToBoolConverter},ConverterParameter=POLYLINE, Mode=TwoWay}" Command="{Binding SetConnectorTypeCommand}" CommandParameter="POLYLINE" Header="Polylines"/>
                            </MenuItem>
                            <MenuItem Focusable="False" Header="_Show Connectors" IsCheckable="True" Name="ShowHideConnectorsMenuItem" IsChecked="{Binding Path=IsShowingConnectors}" Command="{Binding ShowHideConnectorsCommand}">
                            </MenuItem>
                        </MenuItem>
                        <MenuItem Header="_Background 3D Preview" Name="background3dMenu" Focusable="False">
                            <MenuItem Header="{Binding Path=FullscreenWatchShowing, Converter={StaticResource ShowHideFullscreenWatchMenuConverter}}" IsChecked="{Binding Path=FullscreenWatchShowing}" Command="{Binding ToggleFullscreenWatchShowingCommand}"  Focusable="False"/>
                            <MenuItem Header="Navigate Background 3D Preview"
                                          IsEnabled="{Binding Path=FullscreenWatchShowing}"
                                          IsChecked="{Binding Path=CanNavigateBackground}"
                                          InputGestureText="Ctrl + G"
                                          Focusable="False"
                                          Command="{Binding ToggleCanNavigateBackgroundCommand}"/>
                        </MenuItem>
                        <MenuItem Focusable="False" Header="_Find Node By Id" IsCheckable="False" Name="FindNodeById">
                            <WrapPanel HorizontalAlignment="Stretch">
                                <TextBox Name="id_tb" Width="100"></TextBox>
                                <Button Content="Find" Width="70" Name="id_butt" Click="Id_butt_OnClick"></Button>
                            </WrapPanel>
                        </MenuItem>
                        <MenuItem Header="{Binding Path=ConsoleShowing, Converter={StaticResource ShowHideConsoleMenuConverter}}" Command="{Binding ToggleConsoleShowingCommand}" InputGestureText="Ctrl + Alt + Up" Focusable="False"/>
                    </MenuItem>

                    <MenuItem Header="_Workspaces" Name="workspacesMenu" Focusable="False" ItemsSource="{Binding Source={x:Static utilities:dynSettings.CustomNodes}}">
                        <MenuItem.ItemTemplate>
                            <DataTemplate>
                                <MenuItem Focusable="False" Header="{Binding Key}" CommandParameter="{Binding Value}" Command="{Binding Path=DataContext.GoToWorkspaceCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"/>
                            </DataTemplate>
                        </MenuItem.ItemTemplate>
                    </MenuItem>

                    <MenuItem Header="_Packages" Name="PackageManagerMenu" Focusable="False" IsEnabled="True">
                        <MenuItem Focusable="False" Header="_Search for a Package..." Command="{Binding Path=DataContext.ShowPackageManagerSearchCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"  Name="showPMSearch" />
                        <MenuItem Focusable="False" Header="_Manage Packages..." Command="{Binding Path=DataContext.ShowInstalledPackagesCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"  Name="showPMInstalled" />
                        <MenuItem Focusable="False" Header="_Publish Selected Nodes..." Command="{Binding Path=DataContext.PublishSelectedNodesCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"  Name="publishSelected" />
                        <MenuItem Focusable="False" Header="_Publish Current Workspace..." Command="{Binding Path=DataContext.PublishCurrentWorkspaceCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DynamoView}}}"  Name="publishCurrent" />
                    </MenuItem>

                    <MenuItem Header="Help" Focusable="False">
                        <!--<MenuItem Header="_Layout All" Command="{Binding Source={x:Static commands:DynamoCommands.LayoutAllCmd}}"  Name="layoutAll"/>-->
                        <MenuItem Focusable="False" Header="Samples" Name="SamplesMenu">
                            <MenuItem.Icon>
                                <Image Source="/DynamoCore;component/UI/Images/OpenSelectedItemHS.png" Width="14" Height="14" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="_Report A Bug" Command="{Binding ReportABugCommand}"  Name="bugCommand" Focusable="False"/>
                        <MenuItem Header="_Go To Project Website" Command="{Binding GoToSourceCodeCommand}"  Name="sourceCode" Focusable="False"/>
                        <MenuItem Header="_Go To Project Wiki" Command="{Binding GoToWikiCommand}"  Name="wiki" Focusable="False"/>
                    </MenuItem>

                </Menu>

                <!--Titlebar buttons-->
                <Grid Name="titleBarButtonsGrid" Grid.Column="1">
                </Grid>

            </Grid>
        </Border>
        
        <!--Shortcuts Toolbar-->
        <Border Name="shortcutBarBorder"
                Grid.Row="1"
                Grid.Column="0"
                Grid.ColumnSpan="3"
                Height="32"
                BorderBrush="#FF3F4040"
                BorderThickness="0,0,0,1">
            <Grid Name="shortcutBarGrid">
            </Grid>
        </Border>

        <!--Workspace-->
        <Border Margin="0"
                BorderBrush="Black"
                BorderThickness="0"
                Name="border"
                Grid.Row="2"
                Grid.Column="2"
                Grid.ColumnSpan="1"
                Grid.RowSpan="3"
                Background="{StaticResource WorkspaceBackgroundBrush}"
                SizeChanged="Workspace_SizeChanged">

            <Grid>
                <TabControl ItemsSource="{Binding Workspaces, Converter={StaticResource LimitWorkspaceTabsConverter}}"
                            Name="WorkspaceTabs"
                            SelectedIndex="{Binding CurrentWorkspaceIndex}"
                            Background="Transparent"
                            Padding="0"
                            SourceUpdated="WorkspaceTabs_SourceUpdated"
                            SelectionChanged="WorkspaceTabs_SelectionChanged"
                            SizeChanged="WorkspaceTabs_SizeChanged">

                    <TabControl.Resources>

                        <Style TargetType="{x:Type TabControl}">
                            <Setter Property="OverridesDefaultStyle"
                                    Value="True" />
                            <Setter Property="SnapsToDevicePixels"
                                    Value="True" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TabControl}">
                                        <Grid KeyboardNavigation.TabNavigation="Local">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>
                                            <Border BorderBrush="#FF3F4040"
                                                    BorderThickness="1,0,0,1"
                                                    Grid.Row="0">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <ScrollViewer Grid.Column="0"
                                                                  Margin="0,-1,0,0"
                                                                  HorizontalScrollBarVisibility="Hidden"
                                                                  VerticalScrollBarVisibility="Disabled">
                                                        <TabPanel x:Name="HeaderPanel"
                                                                  IsItemsHost="True"
                                                                  KeyboardNavigation.TabIndex="1"
                                                                  Background="Transparent" />
                                                    </ScrollViewer>
                                                    <Menu x:Name="TabControlMenu"
                                                          Grid.Column="1"
                                                          Background="Transparent">
                                                        <Menu.Resources>
                                                            <sys:Double x:Key="ButtonWidthAndHeight">19</sys:Double>
                                                            <!-- Color of the border around the scrollbar-thumb -->
                                                            <SolidColorBrush x:Key="LineButtonBorderBrush"
                                                                             Color="#FF8693BD" />
                                                            <!-- The color to be used when drawing the arrows on the scrollbar's line-buttons -->
                                                            <SolidColorBrush x:Key="LineButtonBrush"
                                                                             Color="#FF14273D" />
                                                            <!-- The color to be used for painting the interior of the TabItem-menu's path -->
                                                            <LinearGradientBrush x:Key="TabMenuButtonBrush"
                                                                                 StartPoint="0,0"
                                                                                 EndPoint="1,1">
                                                                <GradientStop Offset="0"
                                                                              Color="White" />
                                                                <GradientStop Offset="1"
                                                                              Color="#F3F3E3" />
                                                            </LinearGradientBrush>
                                                            <!-- The colors that will be used when assembling the brushes for the LineButtons-->
                                                            <Color x:Key="LineButtonBackgroundColor_Bright">LightGoldenrodYellow</Color>
                                                            <Color x:Key="LineButtonBackgroundColor_Dark">#FAEEB1</Color>
                                                            <LinearGradientBrush StartPoint="0,0"
                                                                                 EndPoint="0,1"
                                                                                 x:Key="LineButtonBackgroundBrush">
                                                                <GradientStop Offset="0.3"
                                                                              Color="{StaticResource LineButtonBackgroundColor_Bright}" />
                                                                <GradientStop Offset="0.4"
                                                                              Color="{StaticResource LineButtonBackgroundColor_Dark}" />
                                                                <GradientStop Offset="1"
                                                                              Color="{StaticResource LineButtonBackgroundColor_Bright}" />
                                                            </LinearGradientBrush>
                                                            <!-- The color for the scrollbar's line-buttons when the mouse hovers over them -->
                                                            <LinearGradientBrush x:Key="LineButtonHoverBrush"
                                                                                 StartPoint="0.5,0"
                                                                                 EndPoint="0.5,1">
                                                                <GradientStop Color="#FFFFD5A0"
                                                                              Offset="0.3" />
                                                                <GradientStop Color="#FFFFA335"
                                                                              Offset="0.51" />
                                                                <GradientStop Color="#FFFFC14A"
                                                                              Offset="0.986" />
                                                            </LinearGradientBrush>
                                                            <!-- The background color of the TabItems popup-menu -->
                                                            <LinearGradientBrush x:Key="TabItemMenuBackcolor"
                                                                                 StartPoint="0,0"
                                                                                 EndPoint="1,1">
                                                                <GradientStop Offset="0"
                                                                              Color="White" />
                                                                <GradientStop Offset="1"
                                                                              Color="#EEE" />
                                                            </LinearGradientBrush>
                                                            <!-- Brushes used for styling TabItems (Foreground/Text) -->
                                                            <SolidColorBrush x:Key="TabItem_TextBrush_Unselected"
                                                                             Color="#4971A3" />
                                                            <SolidColorBrush x:Key="TabItem_TextBrush_Disabled"
                                                                             Color="#888" />
                                                            <SolidColorBrush x:Key="TabItem_TextBrush_Hover"
                                                                             Color="#2D2C8A" />
                                                            <SolidColorBrush x:Key="TabItem_TextBrush_Selected"
                                                                             Color="#0D3288" />

                                                            <SolidColorBrush x:Key="MenuItem_ForegroundBrush"
                                                                             Color="#333" />
                                                            <SolidColorBrush x:Key="MenuItem_DisabledForegroundBrush"
                                                                             Color="#AAA" />
                                                            <SolidColorBrush x:Key="MenuItem_DisabledBackgroundBrush"
                                                                             Color="#1555" />

                                                            <Geometry x:Key="TabMenuButton">M0,1 H0,5 M7,8 L0,8 0,2 10,2 L10,5 M10,8 L10,10 8,10Z</Geometry>
                                                            <Path x:Key="TabMenuButtonPath"
                                                                  Margin="2"
                                                                  Data="{StaticResource TabMenuButton}"
                                                                  Stroke="{StaticResource LineButtonBrush}"
                                                                  Fill="{StaticResource TabMenuButtonBrush}"
                                                                  Stretch="Fill"
                                                                  VerticalAlignment="Center"
                                                                  HorizontalAlignment="Center" />
                                                            <Style x:Key="TabMenuButtonStyle"
                                                                   TargetType="{x:Type MenuItem}">
                                                                <Setter Property="Focusable"
                                                                        Value="False" />
                                                                <Setter Property="Height"
                                                                        Value="{StaticResource ButtonWidthAndHeight}" />
                                                                <Setter Property="Width"
                                                                        Value="{StaticResource ButtonWidthAndHeight}" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type MenuItem}">
                                                                            <Border Name="ButtonBorder"
                                                                                    Margin="1"
                                                                                    BorderBrush="{StaticResource LineButtonBorderBrush}"
                                                                                    Background="{StaticResource LineButtonBackgroundBrush}"
                                                                                    CornerRadius="1"
                                                                                    BorderThickness="1">
                                                                                <Grid>
                                                                                    <ContentPresenter ContentSource="Header"
                                                                                                      Content="{StaticResource TabMenuButtonPath}"
                                                                                                      HorizontalAlignment="Stretch"
                                                                                                      VerticalAlignment="Stretch" />
                                                                                    <Popup Name="Popup"
                                                                                           Placement="Custom"
                                                                                           CustomPopupPlacementCallback="PlacePopup"
                                                                                           IsOpen="{TemplateBinding IsSubmenuOpen}"
                                                                                           AllowsTransparency="True"
                                                                                           Focusable="False"
                                                                                           PopupAnimation="Fade">
                                                                                        <mwt:SystemDropShadowChrome Color="#71000000"
                                                                                                                    CornerRadius="1"
                                                                                                                    Margin="0,0,8,8"
                                                                                                                    SnapsToDevicePixels="True">
                                                                                            <Border Name="SubmenuBorder"
                                                                                                    Margin="1"
                                                                                                    SnapsToDevicePixels="True"
                                                                                                    BorderBrush="{StaticResource LineButtonBorderBrush}"
                                                                                                    Background="{StaticResource TabItemMenuBackcolor}"
                                                                                                    CornerRadius="1"
                                                                                                    BorderThickness="1">
                                                                                                <StackPanel IsItemsHost="True"
                                                                                                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                                                                                            </Border>
                                                                                        </mwt:SystemDropShadowChrome>
                                                                                    </Popup>
                                                                                </Grid>
                                                                            </Border>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsHighlighted"
                                                                                         Value="true">
                                                                                    <Setter TargetName="ButtonBorder"
                                                                                            Property="Background"
                                                                                            Value="{StaticResource LineButtonHoverBrush}" />
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                            <!-- The style for MenuItems that represent TabItems -->
                                                            <Style x:Key="TabMenuItem"
                                                                   TargetType="{x:Type MenuItem}">
                                                                <Style.Resources>
                                                                    <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                                                                         StartPoint="0.5,0"
                                                                                         EndPoint="0.5,1">
                                                                        <GradientStop Color="#FFFFD5A0"
                                                                                      Offset="0.3" />
                                                                        <GradientStop Color="#FFEFA335"
                                                                                      Offset="0.51" />
                                                                        <GradientStop Color="#FFFFC14A"
                                                                                      Offset="0.986" />
                                                                    </LinearGradientBrush>
                                                                </Style.Resources>

                                                                <!-- This will help us bind to the Header of a TabItem -->
                                                                <Setter Property="Header"
                                                                        Value="{Binding Path=Name}" />
                                                                <Setter Property="Tag"
                                                                        Value="{Binding Path=ItemsControl.AlterationIndex, RelativeSource={RelativeSource Mode=TemplatedParent}}" />

                                                                <!--<Setter Property="IsEnabled" Value="{Binding Path=IsEnabled}" />

                                                            <Setter Property="IsCheckable" Value="{Binding Path=IsEnabled}" />
                                                            <Setter Property="IsChecked" Value="{Binding Path=IsSelected}" />-->
                                                                <Setter Property="Foreground"
                                                                        Value="{StaticResource MenuItem_ForegroundBrush}" />

                                                                <EventSetter Event="Click"
                                                                             Handler="TabControlMenuItem_MouseLeftButtonUp" />

                                                                <Style.Triggers>
                                                                    <Trigger Property="IsHighlighted"
                                                                             Value="True">
                                                                        <Setter Property="Foreground"
                                                                                Value="{StaticResource TabItem_TextBrush_Selected}" />
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled"
                                                                             Value="False">
                                                                        <Setter Property="Foreground"
                                                                                Value="{StaticResource MenuItem_DisabledForegroundBrush}" />
                                                                        <Setter Property="Background"
                                                                                Value="{StaticResource MenuItem_DisabledBackgroundBrush}" />
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Menu.Resources>
                                                        <MenuItem Style="{StaticResource TabMenuButtonStyle}"
                                                                  ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type TabControl}},Path=Items}"
                                                                  ItemContainerStyle="{StaticResource TabMenuItem}"
                                                                  AlternationCount="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type TabControl}},Path=Items.Count}">
                                                        </MenuItem>
                                                    </Menu>
                                                </Grid>
                                            </Border>
                                            <Border x:Name="Border"
                                                    Grid.Row="1"
                                                    BorderBrush="{Binding Path=ViewingHomespace, Converter={StaticResource WorkspaceBackgroundBrushConverter}}"
                                                    BorderThickness="0,1,0,0">
                                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                                                  ContentSource="SelectedContent" />
                                            </Border>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style TargetType="{x:Type Button}"
                               x:Key="CloseButtonStyle">
                            <Setter Property="OverridesDefaultStyle"
                                    Value="True" />
                            <Setter Property="SnapsToDevicePixels"
                                    Value="true" />
                            <Setter Property="VerticalAlignment"
                                    Value="Center" />
                            <Setter Property="HorizontalAlignment"
                                    Value="Center" />
                            <Setter Property="Margin"
                                    Value="0,0,0,0" />
                            <Setter Property="Background"
                                    Value="Transparent" />
                            <Setter Property="BorderThickness"
                                    Value="0" />
                            <Setter Property="Padding"
                                    Value="0" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border x:Name="Border"
                                                Background="Transparent"
                                                BorderThickness="0 0 0 0">
                                            <ContentPresenter Margin="0 1 0 0" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Converter={StaticResource WorkspaceTypeConverter}}"
                                             Value="{x:Type models:HomeWorkspace}">
                                    <Setter Property="Visibility"
                                            Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>

                        <Style TargetType="{x:Type TabItem}">
                            <Setter Property="MaxWidth"
                                    Value="{Binding Source={x:Static core:Configurations.TabDefaultWidth}}" />
                            <Setter Property="Width">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource TabSizeConverter}">
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}" />
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}"
                                                 Path="ActualWidth" />
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}"
                                                 Path="Items.Count" />
                                        <!--<Binding Path="Visibility" />-->
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TabItem}">

                                        <Border Name="Border"
                                                BorderBrush="#FF3F4040"
                                                CornerRadius="0,0,0,0">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Style.Triggers>
                                                        <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type TabItem}},Path=IsSelected}" Value="True">
                                                            <Setter Property="Background" Value="{Binding IsHomeSpace, Converter={StaticResource WorkspaceBackgroundBrushConverter}}"/>
                                                            <Setter Property="BorderThickness" Value="1,0,1,1"/>
                                                        </DataTrigger>-->
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type TabItem}},Path=IsSelected}"
                                                                     Value="False">
                                                            <Setter Property="Background"
                                                                    Value="{StaticResource WorkspaceTabBorderSelectedFalse}" />
                                                            <Setter Property="BorderThickness"
                                                                    Value="0,1,1,0" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type TabItem}},Path=IsSelected}"
                                                                     Value="True">
                                                            <Setter Property="Background"
                                                                    Value="{StaticResource WorkspaceTabBorderSelectedTrue}" />
                                                            <Setter Property="BorderThickness"
                                                                    Value="0,0,1,0" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <Grid Margin="0,0,0,0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <ContentPresenter x:Name="ContentSite"
                                                                  Grid.Column="0"
                                                                  VerticalAlignment="Center"
                                                                  ContentSource="Header"
                                                                  HorizontalAlignment="Left" />
                                                <Button Style="{StaticResource CloseButtonStyle}"
                                                        Command="{Binding HideCommand}"
                                                        Grid.Column="1">
                                                    <Image Width="16"
                                                           Height="16">
                                                        <Image.Style>
                                                            <Style TargetType="{x:Type Image}">
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsMouseOver"
                                                                             Value="False">
                                                                        <Setter Property="Source"
                                                                                Value="/DynamoCore;component/UI/Images/closetab_normal.png" />
                                                                    </Trigger>
                                                                    <Trigger Property="IsMouseOver"
                                                                             Value="True">
                                                                        <Setter Property="Source"
                                                                                Value="/DynamoCore;component/UI/Images/closetab_hover.png" />
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>
                                                </Button>
                                            </Grid>
                                        </Border>

                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                    </TabControl.Resources>

                    <TabControl.ItemTemplate>

                        <DataTemplate>

                            <!--<Button>

                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <ContentPresenter Content="{TemplateBinding Content}"/>
                                </ControlTemplate>
                            </Button.Template>

                            <Button.InputBindings>
                                <MouseBinding Gesture="MiddleClick" Command="{Binding HideCommand}" />
                            </Button.InputBindings>-->

                            <DockPanel Margin="0,0,5,0"
                                       Height="20"
                                       HorizontalAlignment="Stretch">

                                <TextBlock Name="WorkspaceName"
                                           Margin="0,2,0,0"
                                           Padding="8,0,0,0"
                                           DockPanel.Dock="Left"
                                           TextTrimming="CharacterEllipsis">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>

                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type TabItem}},Path=IsSelected}"
                                                             Value="True">
                                                    <Setter Property="Foreground"
                                                            Value="{StaticResource WorkspaceTabHeaderActiveTextBrush}"></Setter>
                                                    <Setter Property="FontWeight"
                                                            Value="SemiBold" />
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type TabItem}},Path=IsSelected}"
                                                             Value="False">
                                                    <Setter Property="Foreground"
                                                            Value="{StaticResource WorkspaceTabHeaderInactiveTextBrush}"></Setter>
                                                    <Setter Property="FontWeight"
                                                            Value="Normal" />
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding Converter={StaticResource WorkspaceTypeConverter}}"
                                                             Value="{x:Type models:HomeWorkspace}">
                                                    <Setter Property="Text"
                                                            Value="Home" />
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding Converter={StaticResource WorkspaceTypeConverter}}"
                                                             Value="{x:Type models:FuncWorkspace}">
                                                    <Setter Property="Text"
                                                            Value="{Binding Name}" />
                                                </DataTrigger>

                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>

                                <TextBlock Name="WorkspaceSaveState"
                                           Margin="0,2,0,0"
                                           DockPanel.Dock="Left">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type TabItem}},Path=IsSelected}"
                                                             Value="True">
                                                    <Setter Property="Foreground"
                                                            Value="{StaticResource WorkspaceTabHeaderActiveTextBrush}"></Setter>
                                                    <Setter Property="FontWeight"
                                                            Value="SemiBold" />
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type TabItem}},Path=IsSelected}"
                                                             Value="False">
                                                    <Setter Property="Foreground"
                                                            Value="{StaticResource WorkspaceTabHeaderInactiveTextBrush}"></Setter>
                                                    <Setter Property="FontWeight"
                                                            Value="Normal" />
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding HasUnsavedChanges}"
                                                             Value="True">
                                                    <Setter Property="Text"
                                                            Value="*" />
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding HasUnsavedChanges}"
                                                             Value="False">
                                                    <Setter Property="Text"
                                                            Value="" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>

                            </DockPanel>

                            <!--</Button>-->

                        </DataTemplate>

                    </TabControl.ItemTemplate>

                    <TabControl.ContentTemplate>
                        <DataTemplate>
                            <views:dynWorkspaceView></views:dynWorkspaceView>
                        </DataTemplate>
                    </TabControl.ContentTemplate>

                </TabControl>
                <Grid Name="InfoBubbleGrid"
                      VerticalAlignment="Top"
                      HorizontalAlignment="Left" />
            </Grid>

        </Border>
        
        <!--Collapsed Sidebar-->
        <StackPanel Grid.Row="2"
                    Grid.Column="2"
                    Orientation="Vertical"
                    Name="collapsedSidebar"
                    Width="Auto"
                    Height="Auto"
                    Background="#222222"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Margin="0,120,0,0"
                    Visibility="Hidden">
            <Grid Background="#222222">
                <Button Click="Button_Click" Template="{DynamicResource BackgroundButton}">
                    <Button.Resources>
                        <ControlTemplate x:Key="BackgroundButton" TargetType="Button">
                            <Border Name="border" BorderThickness="0" BorderBrush="Black" VerticalAlignment="Stretch" Padding="5,0,5,0">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                            </Border>
                        </ControlTemplate>
                    </Button.Resources>
                    <Grid Mouse.MouseEnter="Button_MouseEnter" Mouse.MouseLeave="Button_MouseLeave">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Image Grid.Column="1" Source="/DynamoCore;component/UI/Images/expand_normal.png" Visibility="Visible" Width="20" Height="20" RenderTransformOrigin="0.5, 0.5">
                            <Image.RenderTransform>
                                <RotateTransform Angle="90"/>
                            </Image.RenderTransform>
                        </Image>
                        <TextBlock Grid.Column="0" VerticalAlignment="Stretch" Foreground="#aaaaaa" FontWeight="SemiBold" Margin="5 0 5 0" >
                            Library
                        </TextBlock>
                    </Grid>
                </Button>
            </Grid>
            
            <StackPanel.RenderTransform>
                <RotateTransform Angle="-90"/>
            </StackPanel.RenderTransform>
        </StackPanel>

        <ScrollViewer Name="LogScroller" 
                    VerticalAlignment="Stretch"
                    VerticalScrollBarVisibility="Auto" 
                    HorizontalAlignment="Stretch"
                    HorizontalScrollBarVisibility="Hidden"
                    Background="Black" 
                    Opacity="1" 
                    Visibility="Visible"
                    Grid.Row="4"
                    Grid.Column="0" 
                    Grid.ColumnSpan="3">
            
            <ScrollViewer.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Clear" Command="{Binding ClearLogCommand}"/>
                </ContextMenu>
            </ScrollViewer.ContextMenu>

            <TextBox Text="{Binding Path=LogText, Mode=OneWay}" 
                    Foreground="#FF888888" BorderThickness="0" BorderBrush="#00000000" Background="Black"
                    Margin="0" TextWrapping="Wrap"
                    IsReadOnly="True" IsReadOnlyCaretVisible="True" IsUndoEnabled="False" 
                    IsTabStop="False" FontFamily="Consolas" TextChanged="TextBoxBase_OnTextChanged" />
        </ScrollViewer>

        <!--Sidebar-->
        <Grid Height="Auto" Width="Auto" HorizontalAlignment="Stretch" Name="sidebarGrid" VerticalAlignment="Stretch" Visibility="Visible" 
              Grid.Row="2" Grid.Column="0" Grid.RowSpan="2" Background="Black">
        </Grid>

        <WrapPanel Orientation="Horizontal" Grid.Row="5" Grid.Column="0" Grid.RowSpan="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                   Grid.ColumnSpan="3">

            <WrapPanel.Background>
                <LinearGradientBrush  StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="#222" Offset="0.0" />
                    <GradientStop Color="#111" Offset="1.0" />
                </LinearGradientBrush>
            </WrapPanel.Background>

            <Button Name="RunButton" Width="100" Content="Run" 
                    Margin="5" Style="{DynamicResource ResourceKey=STextButton}" 
                    Command="{Binding RunExpressionCommand}"
                    CommandParameter="{Binding Path=RunInDebug}"
                    IsEnabled="{Binding Path=RunEnabled, Mode=TwoWay}" Focusable="False"/>

            <Button Name="cancelButton" Width="100" Content="Cancel" Focusable="False" Style="{DynamicResource ResourceKey=STextButton}" 
                      Command="{Binding CancelRunCommand}" Margin="5"/>
            
            <CheckBox Margin="10"
                      Name="dynamicCheckBox" x:FieldModifier="public" Focusable="False" Foreground="Gray"
                      Content="Run Automatically" FontSize="11" IsChecked="{Binding Path=DynamicRunEnabled, Mode=TwoWay}"
                      IsEnabled="{Binding Path=CanRunDynamically, Mode=OneWay}"
                      VerticalAlignment="Center" VerticalContentAlignment="Center"/>
            
            <CheckBox Margin="10" x:FieldModifier="public" Name="debugCheckBox" 
                      FontSize="11" VerticalAlignment="Center" Foreground="Gray"
                      IsChecked="{Binding Path=RunInDebug, Mode=TwoWay}" Focusable="False"
                      Content="Debug" VerticalContentAlignment="Center"/>
            
            
        </WrapPanel>

        <Canvas HorizontalAlignment="Stretch"
              Margin="0,20,0,0"
              Grid.Row="2"
              Grid.Column="0"
              Grid.RowSpan="3"
              Grid.ColumnSpan="3"
              Name="overlayCanvas" 
              VerticalAlignment="Stretch" 
              Width="Auto" 
              IsHitTestVisible="{Binding IsUILocked}" 
              PreviewMouseMove="OverlayCanvas_OnMouseMove"
              Visibility="Visible" 
                Cursor="{Binding IsUILocked, Converter={StaticResource BoolToCanvasCursorConverter}}"
              ForceCursor="{Binding IsUILocked}">
            
        </Canvas>

        <GridSplitter ResizeDirection="Rows" 
                        Grid.Column="2" 
                        Grid.ColumnSpan="1"
                        Grid.Row="3" 
                        Grid.RowSpan="1"
                        Width="Auto"
                        Height="2" 
                        Name="horizontalSplitter"
                        HorizontalAlignment="Stretch" 
                        VerticalAlignment="Stretch" 
                        Margin="0" Background="#999"/>

        <GridSplitter ResizeDirection="Auto" 
                          Grid.Column="1" 
                          Grid.Row="2"
                          Grid.RowSpan="2"
                          Height="Auto"
                          Width="1"
                          Name="verticalSplitter"
                          HorizontalAlignment="Stretch" 
                          VerticalAlignment="Stretch" 
                          Margin="0" Background="Transparent"/>

    </Grid>
    
    
</Window>
